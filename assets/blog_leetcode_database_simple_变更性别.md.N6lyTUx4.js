import{_ as s,o as a,c as n,R as p}from"./chunks/framework.gZp3ZZFg.js";const m=JSON.parse('{"title":"变更性别","description":"","frontmatter":{"hidden":true,"recommend":false,"date":"2023-12-24T16:20:00.000Z"},"headers":[],"relativePath":"blog/leetcode/database/simple/变更性别.md","filePath":"blog/leetcode/database/simple/变更性别.md","lastUpdated":1703552913000}'),e={name:"blog/leetcode/database/simple/变更性别.md"},i=p(`<h1 id="变更性别" tabindex="-1">变更性别 <a class="header-anchor" href="#变更性别" aria-label="Permalink to &quot;变更性别&quot;">​</a></h1><p><code>Salary</code> 表：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>+-------------+----------+</span></span>
<span class="line"><span>| Column Name | Type     |</span></span>
<span class="line"><span>+-------------+----------+</span></span>
<span class="line"><span>| id          | int      |</span></span>
<span class="line"><span>| name        | varchar  |</span></span>
<span class="line"><span>| sex         | ENUM     |</span></span>
<span class="line"><span>| salary      | int      |</span></span>
<span class="line"><span>+-------------+----------+</span></span>
<span class="line"><span>id 是这个表的主键（具有唯一值的列）。</span></span>
<span class="line"><span>sex 这一列的值是 ENUM 类型，只能从 (&#39;m&#39;, &#39;f&#39;) 中取。</span></span>
<span class="line"><span>本表包含公司雇员的信息。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>请你编写一个解决方案来交换所有的 <code>&#39;f&#39;</code> 和 <code>&#39;m&#39;</code> （即，将所有 <code>&#39;f&#39;</code> 变为 <code>&#39;m&#39;</code> ，反之亦然），仅使用 <strong>单个 update 语句</strong> ，且不产生中间临时表。</p><p>注意，你必须仅使用一条 update 语句，且 <strong>不能</strong> 使用 select 语句。</p><p>结果如下例所示。</p><p><strong>示例 1:</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>输入：</span></span>
<span class="line"><span>Salary 表：</span></span>
<span class="line"><span>+----+------+-----+--------+</span></span>
<span class="line"><span>| id | name | sex | salary |</span></span>
<span class="line"><span>+----+------+-----+--------+</span></span>
<span class="line"><span>| 1  | A    | m   | 2500   |</span></span>
<span class="line"><span>| 2  | B    | f   | 1500   |</span></span>
<span class="line"><span>| 3  | C    | m   | 5500   |</span></span>
<span class="line"><span>| 4  | D    | f   | 500    |</span></span>
<span class="line"><span>+----+------+-----+--------+</span></span>
<span class="line"><span>输出：</span></span>
<span class="line"><span>+----+------+-----+--------+</span></span>
<span class="line"><span>| id | name | sex | salary |</span></span>
<span class="line"><span>+----+------+-----+--------+</span></span>
<span class="line"><span>| 1  | A    | f   | 2500   |</span></span>
<span class="line"><span>| 2  | B    | m   | 1500   |</span></span>
<span class="line"><span>| 3  | C    | f   | 5500   |</span></span>
<span class="line"><span>| 4  | D    | m   | 500    |</span></span>
<span class="line"><span>+----+------+-----+--------+</span></span>
<span class="line"><span>解释：</span></span>
<span class="line"><span>(1, A) 和 (3, C) 从 &#39;m&#39; 变为 &#39;f&#39; 。</span></span>
<span class="line"><span>(2, B) 和 (4, D) 从 &#39;f&#39; 变为 &#39;m&#39; 。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="方法一-使用-update-和-if" tabindex="-1">方法一：使用 <code>UPDATE</code> 和 <code>if</code> <a class="header-anchor" href="#方法一-使用-update-和-if" aria-label="Permalink to &quot;方法一：使用 \`UPDATE\` 和 \`if\`&quot;">​</a></h2><p>要想动态地将值设置成列，我们可以在使用 <code>if</code> 流程控制语句的同时使用 <code>UPDATE</code> 语句。</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Salary</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;m&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;m&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="方法二-使用-update-和-case-when" tabindex="-1">方法二：使用 <code>UPDATE</code> 和 <code>CASE...WHEN</code> <a class="header-anchor" href="#方法二-使用-update-和-case-when" aria-label="Permalink to &quot;方法二：使用 \`UPDATE\` 和 \`CASE...WHEN\`&quot;">​</a></h2><p>要想动态地将值设置成列，我们可以在使用 <code>CASE...WHEN</code> 流程控制语句的同时使用 <code>UPDATE</code> 语句。</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Salary</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sex</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            when</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;m&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> then</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;f&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;m&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          end</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,14),l=[i];function r(c,t,d,h,b,o){return a(),n("div",null,l)}const u=s(e,[["render",r]]);export{m as __pageData,u as default};
