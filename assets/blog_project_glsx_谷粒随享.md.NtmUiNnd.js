import{_ as a,o as e,c as p,R as t}from"./chunks/framework.gZp3ZZFg.js";const o="/assets/项目架构.WiyvnnK1.png",g=JSON.parse('{"title":"1 谷粒随享","description":"","frontmatter":{"recommend":false,"cover":"/blog/project/glsx/images/项目架构.png","tag":["谷粒随享"],"date":"2023-11-26T21:00:00.000Z"},"headers":[],"relativePath":"blog/project/glsx/谷粒随享.md","filePath":"blog/project/glsx/谷粒随享.md","lastUpdated":1703552913000}'),i={name:"blog/project/glsx/谷粒随享.md"},r=t('<h1 id="_1-谷粒随享" tabindex="-1">1 谷粒随享 <a class="header-anchor" href="#_1-谷粒随享" aria-label="Permalink to &quot;1 谷粒随享&quot;">​</a></h1><h2 id="_1-1-课程前置内容" tabindex="-1">1.1 课程前置内容 <a class="header-anchor" href="#_1-1-课程前置内容" aria-label="Permalink to &quot;1.1 课程前置内容&quot;">​</a></h2><h3 id="项目背最" tabindex="-1">项目背最 <a class="header-anchor" href="#项目背最" aria-label="Permalink to &quot;项目背最&quot;">​</a></h3><p>随着智能手机和高速互联网的普及，人们开始寻求更便捷的方式来获取信息和娱乐。有声书的出现使得人们可以在旅途中、跑步时、做家务时等各种场景下，以更加灵活的方式享受阅读。</p><p>在过去，有声书主要是由专业的演员朗读，制作成录音带或CD。但随着数字化媒体的发展，听书软件应运而生，为用户提供了更多选择，包括自助出版的有声书和多样化的内容。</p><h3 id="项目意义" tabindex="-1">项目意义 <a class="header-anchor" href="#项目意义" aria-label="Permalink to &quot;项目意义&quot;">​</a></h3><ol><li>便捷性：听书软件使得阅读不再局限于纸质书籍，用户可以通过手机等设备在任何时间、任何地点收听有声书，节省了携带实体书的麻烦。</li><li>多样化内容：听书软件提供了广泛的有声书选择，涵盖了各种类型的图书、小说、杂志、教育内容等。这样的多样性使得用户能够根据个人兴趣和需求选择内容。</li><li>阅读体验：通过专业的朗读演员和音效制作，听书软件可以提供更加生动、有趣的阅读体验，有助于吸引更多读者，尤其是那些不太喜欢阅读纸质书籍的人。</li><li>辅助功能：听书软件通常还具备一些辅助功能，如调整朗读速度、书签功能、字幕显示等，有助于提高可访问性，使得视力受损或其他障碍的用户也能轻松阅读。</li><li>支持作家和内容创作者：听书软件为作家和内容创作者提供了另一种传播作品的渠道，有助于扩大影响力和读者群。</li><li>学习工具：听书软件也可以用作学习工具，提供学术教材、外语学习材料等，帮助用户在学习过程中更好地理解和吸收知识。</li></ol><p>总的来说，听书软件的开发推动了阅读体验的数字化和个性化，为用户提供了更加便捷、多样化的阅读方式，也促进了作家和内容创作者的创作和传播。</p><h3 id="核心技术" tabindex="-1">核心技术 <a class="header-anchor" href="#核心技术" aria-label="Permalink to &quot;核心技术&quot;">​</a></h3><p>Spring Boot：简化Spring应用的初始搭建以及开发过程</p><p>Spring Cloud：基于Spring Boot实现的云原生应用开发工具</p><p>MyBatis-Plus：持久层框架，也依赖Mybatis</p><p>Redis：内存做缓存</p><p>Redisson：基于Redis的Java驻内存数据网格 - 框架；操作Redis的框架</p><p>MongoDB：分布式文件存储的数据库</p><p>Kafka：消息中间件；大型分布式项目是标配；分布式事务最终一致性</p><p>ElasticSearch+Kibana+Logstash/Filebeat：全文检索服务器+可视化数据监控</p><p>ThreadPoolExecutor+CompletableFuture：线程池来实现异步操作，提高效率</p><p>xxl-Job：分布式定时任务调用中心</p><p>Knife4J/YAPI：Api接口文档工具</p><p>MinIO（私有化对象存储集群）：分布式文件存储 类似于OSS（公有）</p><p>MySQL：关系型数据库 ，shardingSphere-jdbc 进行读写分离; 分库，分表</p><p>Lombok: 实体类的中get/set 生成的jar包</p><p>natapp：内网穿透</p><p>Docker：容器化技术; 生产环境Redis（运维人员）；快速搭建环境Docker run</p><p>Git：代码管理工具；git使用，拉代码、提交、推送、合并、冲突解决</p><p>前端技术栈：</p><p>UniApp</p><p>Vue3全家桶</p><p>TypeScript</p><p>Grace-UI</p><p>Uni-UI</p><p>uniapp-axios-adapter</p><h2 id="_1-2-项目架构" tabindex="-1">1.2 项目架构 <a class="header-anchor" href="#_1-2-项目架构" aria-label="Permalink to &quot;1.2 项目架构&quot;">​</a></h2><p><img src="'+o+'" alt="项目架构"></p>',35),l=[r];function s(n,c,d,h,_,u){return e(),p("div",null,l)}const m=a(i,[["render",s]]);export{g as __pageData,m as default};
