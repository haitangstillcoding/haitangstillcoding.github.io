import{_ as s,o as n,c as a,R as p}from"./chunks/framework.gZp3ZZFg.js";const u=JSON.parse('{"title":"确认率","description":"","frontmatter":{"hidden":true,"recommend":false,"date":"2023-12-26T11:30:00.000Z"},"headers":[],"relativePath":"blog/leetcode/database/medium/确认率.md","filePath":"blog/leetcode/database/medium/确认率.md","lastUpdated":1703734987000}'),i={name:"blog/leetcode/database/medium/确认率.md"},e=p(`<h1 id="确认率" tabindex="-1">确认率 <a class="header-anchor" href="#确认率" aria-label="Permalink to &quot;确认率&quot;">​</a></h1><p>表: <code>Signups</code></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>+----------------+----------+</span></span>
<span class="line"><span>| Column Name    | Type     |</span></span>
<span class="line"><span>+----------------+----------+</span></span>
<span class="line"><span>| user_id        | int      |</span></span>
<span class="line"><span>| time_stamp     | datetime |</span></span>
<span class="line"><span>+----------------+----------+</span></span>
<span class="line"><span>User_id是该表的主键。</span></span>
<span class="line"><span>每一行都包含ID为user_id的用户的注册时间信息。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>表: <code>Confirmations</code></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>+----------------+----------+</span></span>
<span class="line"><span>| Column Name    | Type     |</span></span>
<span class="line"><span>+----------------+----------+</span></span>
<span class="line"><span>| user_id        | int      |</span></span>
<span class="line"><span>| time_stamp     | datetime |</span></span>
<span class="line"><span>| action         | ENUM     |</span></span>
<span class="line"><span>+----------------+----------+</span></span>
<span class="line"><span>(user_id, time_stamp)是该表的主键。</span></span>
<span class="line"><span>user_id是一个引用到注册表的外键。</span></span>
<span class="line"><span>action是类型为(&#39;confirmed&#39;， &#39;timeout&#39;)的ENUM</span></span>
<span class="line"><span>该表的每一行都表示ID为user_id的用户在time_stamp请求了一条确认消息，该确认消息要么被确认(&#39;confirmed&#39;)，要么被过期(&#39;timeout&#39;)。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>用户的 <strong>确认率</strong> 是 <code>&#39;confirmed&#39;</code> 消息的数量除以请求的确认消息的总数。没有请求任何确认消息的用户的确认率为 <code>0</code> 。确认率四舍五入到 <strong>小数点后两位</strong> 。</p><p>编写一个SQL查询来查找每个用户的 确认率 。</p><p>以 任意顺序 返回结果表。</p><p>查询结果格式如下所示。</p><p><strong>示例1:</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>输入：</span></span>
<span class="line"><span>Signups 表:</span></span>
<span class="line"><span>+---------+---------------------+</span></span>
<span class="line"><span>| user_id | time_stamp          |</span></span>
<span class="line"><span>+---------+---------------------+</span></span>
<span class="line"><span>| 3       | 2020-03-21 10:16:13 |</span></span>
<span class="line"><span>| 7       | 2020-01-04 13:57:59 |</span></span>
<span class="line"><span>| 2       | 2020-07-29 23:09:44 |</span></span>
<span class="line"><span>| 6       | 2020-12-09 10:39:37 |</span></span>
<span class="line"><span>+---------+---------------------+</span></span>
<span class="line"><span>Confirmations 表:</span></span>
<span class="line"><span>+---------+---------------------+-----------+</span></span>
<span class="line"><span>| user_id | time_stamp          | action    |</span></span>
<span class="line"><span>+---------+---------------------+-----------+</span></span>
<span class="line"><span>| 3       | 2021-01-06 03:30:46 | timeout   |</span></span>
<span class="line"><span>| 3       | 2021-07-14 14:00:00 | timeout   |</span></span>
<span class="line"><span>| 7       | 2021-06-12 11:57:29 | confirmed |</span></span>
<span class="line"><span>| 7       | 2021-06-13 12:58:28 | confirmed |</span></span>
<span class="line"><span>| 7       | 2021-06-14 13:59:27 | confirmed |</span></span>
<span class="line"><span>| 2       | 2021-01-22 00:00:00 | confirmed |</span></span>
<span class="line"><span>| 2       | 2021-02-28 23:59:59 | timeout   |</span></span>
<span class="line"><span>+---------+---------------------+-----------+</span></span>
<span class="line"><span>输出: </span></span>
<span class="line"><span>+---------+-------------------+</span></span>
<span class="line"><span>| user_id | confirmation_rate |</span></span>
<span class="line"><span>+---------+-------------------+</span></span>
<span class="line"><span>| 6       | 0.00              |</span></span>
<span class="line"><span>| 3       | 0.00              |</span></span>
<span class="line"><span>| 7       | 1.00              |</span></span>
<span class="line"><span>| 2       | 0.50              |</span></span>
<span class="line"><span>+---------+-------------------+</span></span>
<span class="line"><span>解释:</span></span>
<span class="line"><span>用户 6 没有请求任何确认消息。确认率为 0。</span></span>
<span class="line"><span>用户 3 进行了 2 次请求，都超时了。确认率为 0。</span></span>
<span class="line"><span>用户 7 提出了 3 个请求，所有请求都得到了确认。确认率为 1。</span></span>
<span class="line"><span>用户 2 做了 2 个请求，其中一个被确认，另一个超时。确认率为 1 / 2 = 0.5。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="方法一-round-ifnull-avg" tabindex="-1">方法一：round + ifnull + avg <a class="header-anchor" href="#方法一-round-ifnull-avg" aria-label="Permalink to &quot;方法一：round + ifnull + avg&quot;">​</a></h2><p>需求分析：</p><ol><li>确认率是<code>confirmed</code>消息的数量除以请求的确认消息的总数。</li><li>没有请求任何确认消息的用户的确认率为0。</li><li>确认率四舍五入到小数点后两位</li></ol><p>难点解析：</p><p>这道题其实我觉得是考察<code>AVG</code>函数的使用。 根据需求可以看出，答案也就是一个公式：<code>confirmed消息的数量 / 总数</code>。 可以考虑使用<code>AVG</code>函数，需要注意的是<code>AVG</code>函数是可以写条件判断的。</p><ol><li>使用<code>AVG</code>函数计算<code>confirmed</code>的平均值，如果不存在则为NULL</li><li>使用<code>IFNULL</code>把NULL值转换为0</li><li>最后使用<code>ROUND</code>精确到小数点后两位</li></ol><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">user_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ifnull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;confirmed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> confirmation_rate</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Signups </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">left join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Confirmations c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">user_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">user_id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">user_id</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,18),l=[e];function r(c,t,d,h,b,o){return n(),a("div",null,l)}const k=s(i,[["render",r]]);export{u as __pageData,k as default};
