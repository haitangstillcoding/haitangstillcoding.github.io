import{_ as s,o as i,c as a,R as e}from"./chunks/framework.gZp3ZZFg.js";const t="/assets/string类型常用命令.EBknNOyB.png",n="/assets/set_key_value.JsH5VCG_.png",m=JSON.parse('{"title":"Redis数据类型之string","description":"","frontmatter":{"cover":"/blog/redis/images/常用key.png","recommend":false,"tag":["Redis"],"date":"2023-12-31T11:30:00.000Z","top":1},"headers":[],"relativePath":"blog/redis/Redis数据类型之string.md","filePath":"blog/redis/Redis数据类型之string.md","lastUpdated":1704460104000}'),l={name:"blog/redis/Redis数据类型之string.md"},r=e(`<h1 id="redis数据类型之string" tabindex="-1">Redis数据类型之string <a class="header-anchor" href="#redis数据类型之string" aria-label="Permalink to &quot;Redis数据类型之string&quot;">​</a></h1><ol><li><p>命令不区分大小写，而 key 是区分大小写的</p></li><li><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 帮助命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @数据类型</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h2 id="string类型官网地址" tabindex="-1">string类型官网地址 <a class="header-anchor" href="#string类型官网地址" aria-label="Permalink to &quot;string类型官网地址&quot;">​</a></h2><p><a href="https://redis.io/docs/data-types/strings/" target="_blank" rel="noreferrer">https://redis.io/docs/data-types/strings/</a></p><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><p><img src="`+t+'" alt="string类型常用命令"></p><blockquote><p>特点：单值单value</p></blockquote><h2 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h2><h3 id="最常用" tabindex="-1">最常用 <a class="header-anchor" href="#最常用" aria-label="Permalink to &quot;最常用&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [NX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XX]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [GET] [EX seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX milliseconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXAT unix-time-seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PXAT unix-time-milliseconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KEEPTTL]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+n+'" alt="set_key_value"></p><blockquote><p>如何获得设置指定的 Key 过期的 Unix 时间，单位为秒</p></blockquote><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Long.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System.currentTimeMillis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="同时设置-获取多个键值" tabindex="-1">同时设置/获取多个键值 <a class="header-anchor" href="#同时设置-获取多个键值" aria-label="Permalink to &quot;同时设置/获取多个键值&quot;">​</a></h3>',14),h=[r];function p(d,k,o,c,g,u){return i(),a("div",null,h)}const b=s(l,[["render",p]]);export{m as __pageData,b as default};
