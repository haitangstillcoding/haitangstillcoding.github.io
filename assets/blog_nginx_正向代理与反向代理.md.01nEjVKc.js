import{_ as t,o as e,c as a,R as n}from"./chunks/framework.gZp3ZZFg.js";const o="/assets/正向代理.Ytu7YLfp.png",r="/assets/反向代理.SnpBH6Lv.png",b=JSON.parse('{"title":"正向代理与反向代理","description":"","frontmatter":{"cover":"/blog/nginx/images/反向代理.png","recommend":false,"tag":["Nginx","反向代理"],"date":"2023-11-29T21:00:00.000Z"},"headers":[],"relativePath":"blog/nginx/正向代理与反向代理.md","filePath":"blog/nginx/正向代理与反向代理.md","lastUpdated":null}'),s={name:"blog/nginx/正向代理与反向代理.md"},i=n('<h1 id="正向代理与反向代理" tabindex="-1">正向代理与反向代理 <a class="header-anchor" href="#正向代理与反向代理" aria-label="Permalink to &quot;正向代理与反向代理&quot;">​</a></h1><h2 id="正向代理" tabindex="-1">正向代理 <a class="header-anchor" href="#正向代理" aria-label="Permalink to &quot;正向代理&quot;">​</a></h2><p>无论是正向代理，还是反向代理，说到底，就是代理模式的衍生版本罢了。我们都学习过代理设计模式，都知道代理模式中有代理角色和被代理角色，为什么这么说，因为这两个角色对于我们理解正向和反向代理非常重要，下面会讲到。</p><p>下面我将引入这样一个场景，很多时候我们上网的网速特别慢，或者说由于翻墙问题导致我们无法访问到国外的网站，通常这些情况我们会通过给浏览器配置一个网速快的、可以翻墙的代理ip及端口号来解决我们的问题，那么配置好之后，大概的请求流程如下图所示：</p><p><img src="'+o+'" alt="正向代理"></p><p>我们首先请求代理服务器，然后代理服务器帮我们去快速访问国外的网站，对于这种代理方式，我们就称之为正向代理。请记住，上面说到代理模式的两个角色中，我们当前的角色为 <strong>被代理者</strong>，也就是浏览器这个角色。更重要的是，正向代理的本质是我们去请求外部的资源，如果以生产者、消费者模式来区分，我们属于消费者。</p><p><strong>总结：</strong></p><ul><li>1、正向代理，我们的角色是 <strong>被代理者</strong></li><li>2、正向代理，我们不对外提供服务，反而是对外消费服务，属于消费者</li></ul><h2 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h2><p>反向代理，很显然，就是和正向代理相反，如果说正向代理是男，那么反向代理就是女了，亲，此处不再纠结其他情况！下面我用一副图片解释下反向代理：</p><p><img src="'+r+'" alt="反向代理"></p><p>看完上面的图片，请你想象一下这么一个场景，假设你现在是某公司技术总监，你们公司需要对外提供一套web服务，那么你打算怎么做呢？</p><p>答案是可以通过反向代理来完成。通常你们公司拥有自己的IDC机房，机房通讯通常采用局域网交换机，internet网用户请求是无法直接访问到局域网内的web服务的，因此这个时候，你需要一台反向代理服务器来接收internet web请求，然后将请求分发到局域网中的不同主机上进行处理，处理完成之后再做出响应。因此，反向代理大概就是这么一个场景。请记住，反向代理中，我们的角色是 <strong>局域网 web服务</strong>。</p><p><strong>总结：</strong></p><ul><li>1、反向代理，我们的角色是 <strong>局域网 web服务</strong></li><li>2、反向代理，我们对外提供服务，属于服务提供者</li></ul>',15),l=[i];function p(_,c,g,d,h,m){return e(),a("div",null,l)}const f=t(s,[["render",p]]);export{b as __pageData,f as default};
